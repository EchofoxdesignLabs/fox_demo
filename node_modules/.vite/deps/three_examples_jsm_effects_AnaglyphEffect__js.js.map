{
  "version": 3,
  "sources": ["../../three/examples/jsm/effects/AnaglyphEffect.js"],
  "sourcesContent": ["import {\r\n\tLinearFilter,\r\n\tMatrix3,\r\n\tNearestFilter,\r\n\tRGBAFormat,\r\n\tShaderMaterial,\r\n\tStereoCamera,\r\n\tWebGLRenderTarget\r\n} from 'three';\r\nimport { FullScreenQuad } from '../postprocessing/Pass.js';\r\n\r\n/**\r\n * A class that creates an anaglyph effect.\r\n *\r\n * Note that this class can only be used with {@link WebGLRenderer}.\r\n * When using {@link WebGPURenderer}, use {@link AnaglyphPassNode}.\r\n *\r\n * @three_import import { AnaglyphEffect } from 'three/addons/effects/AnaglyphEffect.js';\r\n */\r\nclass AnaglyphEffect {\r\n\r\n\t/**\r\n\t * Constructs a new anaglyph effect.\r\n\t *\r\n\t * @param {WebGLRenderer} renderer - The renderer.\r\n\t * @param {number} width - The width of the effect in physical pixels.\r\n\t * @param {number} height - The height of the effect in physical pixels.\r\n\t */\r\n\tconstructor( renderer, width = 512, height = 512 ) {\r\n\r\n\t\t// Dubois matrices from https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.7.6968&rep=rep1&type=pdf#page=4\r\n\r\n\t\tthis.colorMatrixLeft = new Matrix3().fromArray( [\r\n\t\t\t0.456100, - 0.0400822, - 0.0152161,\r\n\t\t\t0.500484, - 0.0378246, - 0.0205971,\r\n\t\t\t0.176381, - 0.0157589, - 0.00546856\r\n\t\t] );\r\n\r\n\t\tthis.colorMatrixRight = new Matrix3().fromArray( [\r\n\t\t\t- 0.0434706, 0.378476, - 0.0721527,\r\n\t\t\t- 0.0879388, 0.73364, - 0.112961,\r\n\t\t\t- 0.00155529, - 0.0184503, 1.2264\r\n\t\t] );\r\n\r\n\t\tconst _stereo = new StereoCamera();\r\n\r\n\t\tconst _params = { minFilter: LinearFilter, magFilter: NearestFilter, format: RGBAFormat };\r\n\r\n\t\tconst _renderTargetL = new WebGLRenderTarget( width, height, _params );\r\n\t\tconst _renderTargetR = new WebGLRenderTarget( width, height, _params );\r\n\r\n\t\tconst _material = new ShaderMaterial( {\r\n\r\n\t\t\tuniforms: {\r\n\r\n\t\t\t\t'mapLeft': { value: _renderTargetL.texture },\r\n\t\t\t\t'mapRight': { value: _renderTargetR.texture },\r\n\r\n\t\t\t\t'colorMatrixLeft': { value: this.colorMatrixLeft },\r\n\t\t\t\t'colorMatrixRight': { value: this.colorMatrixRight }\r\n\r\n\t\t\t},\r\n\r\n\t\t\tvertexShader: [\r\n\r\n\t\t\t\t'varying vec2 vUv;',\r\n\r\n\t\t\t\t'void main() {',\r\n\r\n\t\t\t\t'\tvUv = vec2( uv.x, uv.y );',\r\n\t\t\t\t'\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\r\n\r\n\t\t\t\t'}'\r\n\r\n\t\t\t].join( '\\n' ),\r\n\r\n\t\t\tfragmentShader: [\r\n\r\n\t\t\t\t'uniform sampler2D mapLeft;',\r\n\t\t\t\t'uniform sampler2D mapRight;',\r\n\t\t\t\t'varying vec2 vUv;',\r\n\r\n\t\t\t\t'uniform mat3 colorMatrixLeft;',\r\n\t\t\t\t'uniform mat3 colorMatrixRight;',\r\n\r\n\t\t\t\t'void main() {',\r\n\r\n\t\t\t\t'\tvec2 uv = vUv;',\r\n\r\n\t\t\t\t'\tvec4 colorL = texture2D( mapLeft, uv );',\r\n\t\t\t\t'\tvec4 colorR = texture2D( mapRight, uv );',\r\n\r\n\t\t\t\t'\tvec3 color = clamp(',\r\n\t\t\t\t'\t\t\tcolorMatrixLeft * colorL.rgb +',\r\n\t\t\t\t'\t\t\tcolorMatrixRight * colorR.rgb, 0., 1. );',\r\n\r\n\t\t\t\t'\tgl_FragColor = vec4(',\r\n\t\t\t\t'\t\t\tcolor.r, color.g, color.b,',\r\n\t\t\t\t'\t\t\tmax( colorL.a, colorR.a ) );',\r\n\r\n\t\t\t\t'\t#include <tonemapping_fragment>',\r\n\t\t\t\t'\t#include <colorspace_fragment>',\r\n\r\n\t\t\t\t'}'\r\n\r\n\t\t\t].join( '\\n' )\r\n\r\n\t\t} );\r\n\r\n\t\tconst _quad = new FullScreenQuad( _material );\r\n\r\n\t\t/**\r\n\t\t * Resizes the effect.\r\n\t\t *\r\n\t\t * @param {number} width - The width of the effect in logical pixels.\r\n\t\t * @param {number} height - The height of the effect in logical pixels.\r\n\t\t */\r\n\t\tthis.setSize = function ( width, height ) {\r\n\r\n\t\t\trenderer.setSize( width, height );\r\n\r\n\t\t\tconst pixelRatio = renderer.getPixelRatio();\r\n\r\n\t\t\t_renderTargetL.setSize( width * pixelRatio, height * pixelRatio );\r\n\t\t\t_renderTargetR.setSize( width * pixelRatio, height * pixelRatio );\r\n\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * When using this effect, this method should be called instead of the\r\n\t\t * default {@link WebGLRenderer#render}.\r\n\t\t *\r\n\t\t * @param {Object3D} scene - The scene to render.\r\n\t\t * @param {Camera} camera - The camera.\r\n\t\t */\r\n\t\tthis.render = function ( scene, camera ) {\r\n\r\n\t\t\tconst currentRenderTarget = renderer.getRenderTarget();\r\n\r\n\t\t\tif ( scene.matrixWorldAutoUpdate === true ) scene.updateMatrixWorld();\r\n\r\n\t\t\tif ( camera.parent === null && camera.matrixWorldAutoUpdate === true ) camera.updateMatrixWorld();\r\n\r\n\t\t\t_stereo.update( camera );\r\n\r\n\t\t\trenderer.setRenderTarget( _renderTargetL );\r\n\t\t\trenderer.clear();\r\n\t\t\trenderer.render( scene, _stereo.cameraL );\r\n\r\n\t\t\trenderer.setRenderTarget( _renderTargetR );\r\n\t\t\trenderer.clear();\r\n\t\t\trenderer.render( scene, _stereo.cameraR );\r\n\r\n\t\t\trenderer.setRenderTarget( null );\r\n\t\t\t_quad.render( renderer );\r\n\r\n\t\t\trenderer.setRenderTarget( currentRenderTarget );\r\n\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Frees internal resources. This method should be called\r\n\t\t * when the effect is no longer required.\r\n\t\t */\r\n\t\tthis.dispose = function () {\r\n\r\n\t\t\t_renderTargetL.dispose();\r\n\t\t\t_renderTargetR.dispose();\r\n\r\n\t\t\t_material.dispose();\r\n\t\t\t_quad.dispose();\r\n\r\n\t\t};\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport { AnaglyphEffect };\r\n"],
  "mappings": ";;;;;;;;;;;;;;AAmBA,IAAM,iBAAN,MAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASpB,YAAa,UAAU,QAAQ,KAAK,SAAS,KAAM;AAIlD,SAAK,kBAAkB,IAAI,QAAQ,EAAE,UAAW;AAAA,MAC/C;AAAA,MAAU;AAAA,MAAa;AAAA,MACvB;AAAA,MAAU;AAAA,MAAa;AAAA,MACvB;AAAA,MAAU;AAAA,MAAa;AAAA,IACxB,CAAE;AAEF,SAAK,mBAAmB,IAAI,QAAQ,EAAE,UAAW;AAAA,MAChD;AAAA,MAAa;AAAA,MAAU;AAAA,MACvB;AAAA,MAAa;AAAA,MAAS;AAAA,MACtB;AAAA,MAAc;AAAA,MAAa;AAAA,IAC5B,CAAE;AAEF,UAAM,UAAU,IAAI,aAAa;AAEjC,UAAM,UAAU,EAAE,WAAW,cAAc,WAAW,eAAe,QAAQ,WAAW;AAExF,UAAM,iBAAiB,IAAI,kBAAmB,OAAO,QAAQ,OAAQ;AACrE,UAAM,iBAAiB,IAAI,kBAAmB,OAAO,QAAQ,OAAQ;AAErE,UAAM,YAAY,IAAI,eAAgB;AAAA,MAErC,UAAU;AAAA,QAET,WAAW,EAAE,OAAO,eAAe,QAAQ;AAAA,QAC3C,YAAY,EAAE,OAAO,eAAe,QAAQ;AAAA,QAE5C,mBAAmB,EAAE,OAAO,KAAK,gBAAgB;AAAA,QACjD,oBAAoB,EAAE,OAAO,KAAK,iBAAiB;AAAA,MAEpD;AAAA,MAEA,cAAc;AAAA,QAEb;AAAA,QAEA;AAAA,QAEA;AAAA,QACA;AAAA,QAEA;AAAA,MAED,EAAE,KAAM,IAAK;AAAA,MAEb,gBAAgB;AAAA,QAEf;AAAA,QACA;AAAA,QACA;AAAA,QAEA;AAAA,QACA;AAAA,QAEA;AAAA,QAEA;AAAA,QAEA;AAAA,QACA;AAAA,QAEA;AAAA,QACA;AAAA,QACA;AAAA,QAEA;AAAA,QACA;AAAA,QACA;AAAA,QAEA;AAAA,QACA;AAAA,QAEA;AAAA,MAED,EAAE,KAAM,IAAK;AAAA,IAEd,CAAE;AAEF,UAAM,QAAQ,IAAI,eAAgB,SAAU;AAQ5C,SAAK,UAAU,SAAWA,QAAOC,SAAS;AAEzC,eAAS,QAASD,QAAOC,OAAO;AAEhC,YAAM,aAAa,SAAS,cAAc;AAE1C,qBAAe,QAASD,SAAQ,YAAYC,UAAS,UAAW;AAChE,qBAAe,QAASD,SAAQ,YAAYC,UAAS,UAAW;AAAA,IAEjE;AASA,SAAK,SAAS,SAAW,OAAO,QAAS;AAExC,YAAM,sBAAsB,SAAS,gBAAgB;AAErD,UAAK,MAAM,0BAA0B,KAAO,OAAM,kBAAkB;AAEpE,UAAK,OAAO,WAAW,QAAQ,OAAO,0BAA0B,KAAO,QAAO,kBAAkB;AAEhG,cAAQ,OAAQ,MAAO;AAEvB,eAAS,gBAAiB,cAAe;AACzC,eAAS,MAAM;AACf,eAAS,OAAQ,OAAO,QAAQ,OAAQ;AAExC,eAAS,gBAAiB,cAAe;AACzC,eAAS,MAAM;AACf,eAAS,OAAQ,OAAO,QAAQ,OAAQ;AAExC,eAAS,gBAAiB,IAAK;AAC/B,YAAM,OAAQ,QAAS;AAEvB,eAAS,gBAAiB,mBAAoB;AAAA,IAE/C;AAMA,SAAK,UAAU,WAAY;AAE1B,qBAAe,QAAQ;AACvB,qBAAe,QAAQ;AAEvB,gBAAU,QAAQ;AAClB,YAAM,QAAQ;AAAA,IAEf;AAAA,EAED;AAED;",
  "names": ["width", "height"]
}
